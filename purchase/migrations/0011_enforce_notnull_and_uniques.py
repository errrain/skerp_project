# Generated by Django 5.2 on 2025-10-18 12:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    atomic = False  # ← 트랜잭션 분리로 pending trigger 문제 회피

    dependencies = [
        ('partnerorder', '0002_partnershipmentline'),
        ('purchase', '0010_fill_shipment_group_and_sublot'),
    ]

    operations = [
        # A) 헤더 shipment_group_id 재백필 (라인 → 검사 → 배송라인 → 배송그룹 추적)
        migrations.RunSQL(
            sql=r"""
            UPDATE purchase_injectionreceipt r
            SET shipment_group_id = sg.id
            FROM purchase_injectionreceiptline rl
            JOIN quality_incominginspectiondetail d ON d.id = rl.detail_id
            JOIN partner_shipment_line pl ON pl.id = d.shipment_line_id
            JOIN partner_shipment_group sg ON sg.id = pl.shipment_id
            WHERE r.id = rl.receipt_id
              AND r.shipment_group_id IS NULL;
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        # B) 라인 0개 & qty=0 & shipment_group NULL 헤더는 개발DB 정책상 정리
        migrations.RunSQL(
            sql=r"""
            DELETE FROM purchase_injectionreceipt r
            WHERE r.shipment_group_id IS NULL
              AND r.qty = 0
              AND NOT EXISTS (
                    SELECT 1 FROM purchase_injectionreceiptline rl
                    WHERE rl.receipt_id = r.id
              );
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        # C) sub_seq 비어 있으면 receipt별 1..N으로 채우기
        migrations.RunSQL(
            sql=r"""
            WITH ranked AS (
              SELECT rl.id,
                     rl.receipt_id,
                     ROW_NUMBER() OVER (PARTITION BY rl.receipt_id ORDER BY rl.id) AS rn
              FROM purchase_injectionreceiptline rl
              WHERE rl.sub_seq IS NULL OR rl.sub_seq = 0
            )
            UPDATE purchase_injectionreceiptline t
            SET sub_seq = ranked.rn
            FROM ranked
            WHERE t.id = ranked.id;
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        # D) sub_lot 채우기: INxxxx-SS 형태
        migrations.RunSQL(
            sql=r"""
            UPDATE purchase_injectionreceiptline rl
            SET sub_lot = r.receipt_lot || '-' || LPAD(rl.sub_seq::text, 2, '0')
            FROM purchase_injectionreceipt r
            WHERE r.id = rl.receipt_id
              AND (rl.sub_lot IS NULL OR rl.sub_lot = '');
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        # E-1) (개발 DB 전용) shipment_group이 NULL인 헤더를 참조하는 이슈 삭제
        migrations.RunSQL(
            sql=r"""
            DELETE FROM purchase_injectionissue ii
            USING purchase_injectionreceipt r
            WHERE ii.receipt_id = r.id
              AND r.shipment_group_id IS NULL;
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        # E-2) 라인 없고(qty=0) shipment_group NULL인 헤더만 삭제
        migrations.RunSQL(
            sql=r"""
            DELETE FROM purchase_injectionreceipt r
            WHERE r.shipment_group_id IS NULL
              AND r.qty = 0
              AND NOT EXISTS (
                    SELECT 1 FROM purchase_injectionreceiptline rl
                    WHERE rl.receipt_id = r.id
              );
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),
    ]